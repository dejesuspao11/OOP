# -*- coding: utf-8 -*-
"""Calculator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fbCa25bPiS1khboUtcBNFZqoae-9bIlW
"""

#we are creating a function that will take to values (A and B) and return their sum
def add(a, b):
    return a + b
#this function will take to values (A and B) and return their difference
def subtract(a, b):
    return a - b
#this function will take to values (A and B) and return their product
def multiply(a, b):
    return a * b
#this function will take to values (A and B) and return the result of A/B
def division(a, b):
  #division by 0 is not allowed, so as long as the value entered for B is NOT 0
    if b != 0:
    #the function will return the result of A/B
      return a/b
      #if the value entered for B is 0...
    else:
      #we will see this message alert
      print("can't divide by zero!!!")
#we need 3 values for this one: a, b, c
def integrate(a, b, c):
    #this is the integration formula we are using: ax^n + c
    return (a / (b + 1)) * (c**(b + 1))
#defines a function to add 2 matrices (represented as 2D lists in Python)
def addMatrix(a, b):
    #initializes an empty list called "result". this list will store the result
    result = []
    #"for" iterates over the rows of the given matrices (a and b)
    #len(a) gives the number of rows in the first given matrix (a), this loop will iterate from 0 to len(a) - 1
    for i in range(len(a)):
      #initializes an empty list row for each iteration of the outer loop.
      #this empty list is used to store the sums of corresponding elements from the current row of matrices
      #it ensures that the resulting matrix is constructed row by row with the correct values.
        row = []
        #this loop goes from 0 to len(a[0]) - 1, it iterates through each column of the matrices.
        for j in range(len(a[0])):
            #a[i][j] represents the element at the i-th row and j-th column of matrix a.
            #b[i][j] represents the element at the same position in matrix b.
            #the + operator adds these two elements together.
            #the result of this addition is appended to the row list.
            row.append(a[i][j] + b[i][j])
        #this line appends the row (which now contains the sum of corresponding
        #elements of the current row in a and b) to the result list
        #this process continues for each row in the matrices, adding each row-wise sum to the "result" list
        result.append(row)

    return result

#these lines serve as a "menu", we see a welcome message and the available options
print("hi, this is my calculator")
print("choose 1 to add")
print("choose 2 to subtract")
print("choose 3 to multiply")
print("choose 4 to divide")
print("choose 5 to integrate")
print("choose 6 to add matrices")

#the option selected by the user will be stored in "yourchoice"
yourchoice = input("what are we doing?: ")

if yourchoice == '1':
    print("addition...")
    num1 = float(input("enter first number: "))
    num2 = float(input("enter second number: "))
    result = add(num1, num2)
    print("=", result)
elif yourchoice == '2':
    print("subtraction...")
    num1 = float(input("enter first number: "))
    num2 = float(input("enter second number: "))
    result = subtract(num1, num2)
    print("=", result)
elif yourchoice == '3':
    print("multiplication...")
    num1 = float(input("enter first number: "))
    num2 = float(input("enter second number: "))
    result = multiply(num1, num2)
    print("=", result)
elif yourchoice == '4':
    print("division...")
    num1 = float(input("enter first number: "))
    num2 = float(input("enter second number: "))
    result = division(num1, num2)
    print("=", result)
elif yourchoice == '5':
    print("integration...")
    print("formula is (ax^n + c)")
    a = float(input("enter the coefficient 'a': "))
    b = float(input("enter the exponent 'n': "))
    c = float(input("enter the constant 'c': "))
    result = integrate(a, b, c)
    print("=", result)

elif yourchoice == '6':
    #input for the first matrix
    print("Enter elements of the first matrix:")
    rows1 = int(input("Enter number of rows: "))
    cols1 = int(input("Enter number of columns: "))
    matrix1 = []
    for i in range(rows1):
        row = []
        for j in range(cols1):
            element = float(input(f"Enter element [{i+1}][{j+1}]: "))
            row.append(element)
        matrix1.append(row)

    #input for the second matrix
    print("Enter elements of the second matrix (same size as first):")
    matrix2 = []
    for i in range(rows1):
        row = []
        for j in range(cols1):
            element = float(input(f"Enter element [{i+1}][{j+1}]: "))
            row.append(element)
        matrix2.append(row)

    result = addMatrix(matrix1, matrix2)
    print("Result of Addition:")
    for row in result:
        print(row)

#if the user enters a value that is not within 1-6, we display a message alert
#to let them know the selected value is not a valid option
else:
    print("option", yourchoice, "is not available")

